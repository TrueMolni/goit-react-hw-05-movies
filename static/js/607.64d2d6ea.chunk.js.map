{"version":3,"file":"static/js/607.64d2d6ea.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,gCAIXC,GAFc,UAAMD,EAAN,uCAA6CD,GAEhDG,EAAAA,EAAAA,OAAa,CAC5BC,QAASH,EACTI,OAAQ,CACNC,IAAKN,MAITG,EAAAA,EAAAA,SAAAA,QAAyBF,EAElB,IAAMM,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAT,iBAAuBD,EAAvB,oBAAqCR,IADlC,uBAClBU,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZC,EAAW,mCAAG,sGACFT,EAASO,IAAT,qCAA2CT,IADzC,uBACjBU,EADiB,EACjBA,KADiB,kBAElBA,EAAKE,SAFa,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,yFACHZ,EAASO,IAAT,kCAEDT,EAFC,iCAE+Bc,EAF/B,yBADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAKnBA,EAAKE,SALc,2CAAH,sDAQZG,EAAe,mCAAG,WAAMP,GAAN,yFACNN,EAASO,IAAT,iBACXD,EADW,4BACWR,IAFL,uBACrBU,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAQfM,EAAe,mCAAG,WAAMR,GAAN,yFACNN,EAASO,IAAT,iBACXD,EADW,4BACWR,IAFL,uBACrBU,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD,kKCzCfO,EAAaC,EAAAA,EAAAA,GAAH,+CAIVC,EAAOD,EAAAA,EAAAA,GAAH,8FAMJE,EAASF,EAAAA,EAAAA,EAAH,wFAMNG,EAAUH,EAAAA,EAAAA,EAAH,yFAMPI,EAAWJ,EAAAA,EAAAA,EAAH,8G,SCoBrB,EAtCuB,WACrB,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,gHAE8BZ,EAAAA,EAAAA,IAAgBO,GAF9C,gBAEYX,EAFZ,EAEYA,QACRe,EAAWf,GAHf,gDAKIiB,QAAQC,IAAI,QAAZ,MALJ,0DALc,sBACTP,GADS,mCAadQ,EACD,GAAE,CAACR,IAEAG,EAAQM,OAAS,GAEjB,SAACf,EAAD,UACGS,GACCA,EAAQO,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,QAASZ,EAAc,EAAdA,QAC9B,OACE,UAACJ,EAAD,YACE,UAACC,EAAD,sBAAiBc,MACjB,SAACb,EAAD,UAAUc,MAFDZ,EAKd,OAIF,SAACD,EAAD,gDACR,C","sources":["Api/Api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '623333e2eba93b003942355e59320afc';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const API_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    key: API_KEY,\n  },\n});\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getTrending = async () => {\n  const { data } = await instance.get(`/trending/all/week?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get(\n    `\n/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  padding: 15px 35px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 32px;\n  margin-right: 15px;\n  border-radius: 5px;\n`;\n\nexport const Author = styled.p`\n  font-weight: bold;\n  color: #25468e;\n  margin-bottom: 5px;\n`;\n\nexport const Content = styled.p`\n  font-weight: normal;\n  color: #1e2d4f;\n  max-width: 1024px;\n`;\n\nexport const NoReview = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n  margin-left: 35px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'Api';\n\nimport { ReviewList, Item, Author, Content, NoReview } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    async function fetchReviews() {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  if (reviews.length > 0) {\n    return (\n      <ReviewList>\n        {reviews &&\n          reviews.map(({ author, content, movieId }) => {\n            return (\n              <Item key={movieId}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </Item>\n            );\n          })}\n      </ReviewList>\n    );\n  }\n  return <NoReview> There is no reviews on this movie</NoReview>;\n};\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","instance","axios","baseURL","params","key","getMovieById","id","get","data","getTrending","results","searchMovies","query","getMovieCredits","getMovieReviews","ReviewList","styled","Item","Author","Content","NoReview","movieId","useParams","useState","reviews","setReviews","useEffect","console","log","fetchReviews","length","map","author","content"],"sourceRoot":""}
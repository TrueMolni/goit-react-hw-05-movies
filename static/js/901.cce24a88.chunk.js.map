{"version":3,"file":"static/js/901.cce24a88.chunk.js","mappings":"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","sources":["components/Api/Api.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '623333e2eba93b003942355e59320afc';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const API_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    key: API_KEY,\n  },\n});\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getTrending = async () => {\n  const { data } = await instance.get(`/trending/all/week?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data.results;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n","const MovieDetails = ({\n  name,\n  title,\n  release_date,\n  overview,\n  vote_average,\n  poster_path,\n  backdrop_path,\n  genres,\n  original_title,\n}) => {\n  return (\n    <div>\n      <img src={poster_path || backdrop_path} alt={title} />\n      <div>\n        <h2>{title || original_title || name}</h2>\n        <p>{release_date}</p>\n        <p>{vote_average}</p>\n        <p>About : </p>\n        <p>{overview}</p>\n        <p>\n          {genres &&\n            genres.map(({ id, name }) => <span key={id}>{name},</span>)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieById } from 'components/Api';\nimport MovieDetails from '../../components/MovieDetails/MovieDetails';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    async function fetchMovieInfo() {\n      if (!id) {\n        return;\n      }\n\n      try {\n        const response = await getMovieById(id);\n        setMovie(response);\n        console.log('by id:   ', response);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchMovieInfo();\n  }, [id]);\n\n  // const {\n  //   name,\n  //   title,\n  //   release_date,\n  //   overview,\n  //   vote_average,\n  //   poster_path,\n  //   backdrop_path,\n  //   genres,\n  //   original_title,\n  // } = movie;\n\n  return (\n    <div>\n      <button onClick={() => navigate(from)}>Go back</button>\n      <MovieDetails\n        name={movie?.name}\n        title={movie?.title}\n        release_date={movie?.release_date}\n        overview={movie?.overview}\n        vote_average={movie?.vote_average}\n        poster_path={movie?.poster_path}\n        backdrop_path={movie?.backdrop_path}\n        genres={movie?.genres}\n        original_title={movie?.original_title}\n      />\n      <ul>\n        <Link to=\"cast\" state={{ from }}>\n          <p>Cast</p>\n        </Link>\n        <Link to=\"reviews\" state={{ from }}>\n          <p>Reviews</p>\n        </Link>\n        <Outlet context={id} />\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["API_KEY","BASE_URL","instance","axios","baseURL","params","key","getMovieById","id","get","data","getTrending","results","getMovieCredits","getMovieReviews","name","title","release_date","overview","vote_average","poster_path","backdrop_path","genres","original_title","src","alt","map","useState","movie","setMovie","useParams","navigate","useNavigate","from","useLocation","state","useEffect","response","console","log","fetchMovieInfo","onClick","to","context"],"sourceRoot":""}